version: '3'

networks:
    laravel:

services:
    web:
        build:
            context: .
            dockerfile: nginx/Dockerfile
        container_name: web
        ports:
            - "8080:80"
        volumes:
            - ./src:/var/www/html
        depends_on:
            - php
            - database
        networks:
            - laravel

    database:
        image: mariadb:latest
        container_name: database
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        volumes:
            - ./db-data:/var/lib/mysql
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            - laravel

    php:
        build:
            context: .
            dockerfile: php/Dockerfile
        container_name: php
        volumes:
            - ./src:/var/www/html
        ports:
            - "9000:9000"
        networks:
            - laravel

    composer:
        build:
            context: .
            dockerfile: composer.dockerfile
        container_name: composer
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        depends_on:
            - php
        user: laravel
        networks:
            - laravel
        entrypoint: ['composer']

    npm:
        image: node:latest
        container_name: npm
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']

    artisan:
        build:
            context: .
            dockerfile: php/Dockerfile
        container_name: artisan
        volumes:
            - ./src:/var/www/html
        depends_on:
            - php
            - database
        working_dir: /var/www/html
        user: laravel
        entrypoint: ['php', '/var/www/html/artisan']
        networks:
            - laravel